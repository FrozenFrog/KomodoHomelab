[[stack]]
name = "adguard-home"
tags = ["system"]
[stack.config]
server = "HomeLab"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
linked_repo = "Komodo-Github"
run_directory = "stacks/BackboneSystems"
file_paths = ["adguard_home.yaml"]
env_file_path = "adguardhome.env"
additional_env_files = ["../../MainSystem/.env"]
environment = """
APP_CONFIG_PATH=adguardhome-config
"""

##

[[stack]]
name = "cloudflared"
tags = ["system"]
[stack.config]
server = "HomeLab"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
linked_repo = "Komodo-Github"
run_directory = "stacks/BackboneSystems"
file_paths = ["cloudflared.yaml"]
env_file_path = "cloudflared.env"
additional_env_files = ["../../MainSystem/.env"]
environment = """
APP_CONFIG_PATH=cloudflared-config
"""

##

[[stack]]
name = "godoxy"
tags = ["system"]
[stack.config]
server = "HomeLab"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
linked_repo = "Komodo-Github"
run_directory = "stacks/BackboneSystems"
file_paths = ["godoxy.yaml"]
env_file_path = "godoxy.env"
additional_env_files = ["../../MainSystem/.env"]
environment = """
# docker image tag (latest, nightly)
TAG=latest
APP_CONFIG_PATH=godoxy-config
# container uid and gid (must match the owner of mounted directories)
GODOXY_UID=1000
GODOXY_GID=1000

# Set GODOXY_API_JWT_SECURE=false to allow http
GODOXY_API_JWT_SECURE=true
# API JWT Configuration (common)
# generate secret with `openssl rand -base64 32`
GODOXY_API_JWT_SECRET=ee3dc562a8a033aceafc184c01dfcc395b637962657274726f6e
# the JWT token time-to-live
# leave empty to use default (24 hours)
# format: https://pkg.go.dev/time#Duration
GODOXY_API_JWT_TOKEN_TTL=

# API/WebUI user password login credentials (optional)
# These fields are not required for OIDC authentication
GODOXY_API_USER=mahdi
GODOXY_API_PASSWORD=quadong

# OIDC Configuration (optional)
# Uncomment and configure these values to enable OIDC authentication.
#
# GODOXY_OIDC_ISSUER_URL=https://accounts.google.com
# GODOXY_OIDC_CLIENT_ID=your-client-id
# GODOXY_OIDC_CLIENT_SECRET=your-client-secret
# GODOXY_OIDC_SCOPES=openid, profile, email, groups # you may also include `offline_access` if your Idp supports it (e.g. Authentik, Pocket ID)
#
# User definitions: Uncomment and configure these values to restrict access to specific users or groups.
# These two fields act as a logical AND operator. For example, given the following membership:
#   user1, group1
#   user2, group1
#   user3, group2
#   user1, group2
# You can allow access to user3 AND all users of group1 by providing:
#   # GODOXY_OIDC_ALLOWED_USERS=user3
#   # GODOXY_OIDC_ALLOWED_GROUPS=group1
#
# Comma-separated list of allowed users.
# GODOXY_OIDC_ALLOWED_USERS=user1,user2
# Optional: Comma-separated list of allowed groups.
# GODOXY_OIDC_ALLOWED_GROUPS=group1,group2

# Proxy listening address
GODOXY_HTTP_ADDR=:80
GODOXY_HTTPS_ADDR=:443

# Enable HTTP3
GODOXY_HTTP3_ENABLED=true


# Metrics
GODOXY_METRICS_DISABLE_CPU=false
GODOXY_METRICS_DISABLE_MEMORY=false
GODOXY_METRICS_DISABLE_DISK=false
GODOXY_METRICS_DISABLE_NETWORK=false
GODOXY_METRICS_DISABLE_SENSORS=false

# Frontend listening port
GODOXY_FRONTEND_PORT=3001

# Frontend aliases (subdomains / FQDNs, e.g. godoxy, godoxy.domain.com)
GODOXY_FRONTEND_ALIASES=godoxy

# Docker socket
# /var/run/podman/podman.sock for podman
DOCKER_SOCKET=/var/run/docker.sock


# Debug mode
GODOXY_DEBUG=true
"""

##

[[stack]]
name = "homepage"
tags = ["system"]
[stack.config]
server = "HomeLab"
poll_for_updates = true
auto_update = true
auto_update_all_services = true
linked_repo = "Komodo-Github"
run_directory = "stacks/BackboneSystems"
file_paths = ["gethomepage.yaml"]
env_file_path = "gethomepage.env"
additional_env_files = ["../../MainSystem/.env"]
environment = """
APP_CONFIG_PATH=gethomepage-config
"""

##

[[procedure]]
name = "Backup Core Database"
description = "Triggers the Core database backup at the scheduled time."
tags = ["system", "automation"]
config.schedule = "Every day at 23:00"

[[procedure.config.stage]]
name = "Stage 1"
enabled = true
executions = [
  { execution.type = "BackupCoreDatabase", execution.params = {}, enabled = true }
]

##

[[procedure]]
name = "Global Auto Update"
description = "Pulls and auto updates Stacks and Deployments using 'poll_for_updates' or 'auto_update'."
tags = ["system", "automation"]
config.schedule = "Every day at 23:00"

[[procedure.config.stage]]
name = "Stage 1"
enabled = true
executions = [
  { execution.type = "GlobalAutoUpdate", execution.params = {}, enabled = true }
]